package com.daniloaraujosilva.mathemagika.library.jvm.common.functions

import com.daniloaraujosilva.mathemagika.library.jvm.common.MathematicaFunction


/**
*````
*
* Name:             TravelDirectionsData
*
* Full name:        System`TravelDirectionsData
*
* Usage:            TravelDirectionsData[\[Ellipsis]] represents \
travel directions generated by TravelDirections.
*
* Options:          UnitSystem :> $UnitSystem
*
* Attributes:       Protected
*
*                   local: paclet:ref/TravelDirectionsData
* Documentation:    web: \
http://reference.wolfram.com/language/ref/TravelDirectionsData.html
*
* Definitions:      None
*
* Own values:       None
*
* Down values:      None
*
* Up values:        None
*
*                   TravelDirectionsData[_List, \
GIS`TravelDump`route_Association, \
GIS`TravelDump`defaultOpts___][\"TravelDistance\", \
GIS`TravelDump`opts:OptionsPattern[TravelDirectionsData]] := \
GIS`TravelDump`GeoUnitConvert[Quantity[\"Distance\" /. \
GIS`TravelDump`route, \"Kilometers\"], \
If[MatchQ[{GIS`TravelDump`opts}, {___, _[UnitSystem, _], ___}], \
OptionValue[TravelDirectionsData, {GIS`TravelDump`opts}, UnitSystem], \
OptionValue[TravelDirections, {GIS`TravelDump`defaultOpts}, \
UnitSystem]]]
*                   TravelDirectionsData[_List, \
GIS`TravelDump`route_Association, ___][\"TravelTime\", \
GIS`TravelDump`opts:OptionsPattern[TravelDirectionsData]] := \
GIS`TravelDump`TimeConvert[Quantity[With[{GIS`TravelDump`t = \"Time\" \
	/. GIS`TravelDump`route}, Round[GIS`TravelDump`t, \
Which[GIS`TravelDump`t > 600, 60, GIS`TravelDump`t > 120, 15, True, \
1]]], \"Seconds\"]]
*                   TravelDirectionsData[_List, \
GIS`TravelDump`route_Association, ___][\"ManeuverGrid\", \
GIS`TravelDump`opts:OptionsPattern[TravelDirectionsData]] := \
Grid[({Text[\"Narrative\" /. #1], With[{GIS`TravelDump`km = \
	\"Distance\" /. #1}, If[GIS`TravelDump`km > 0, \
	\!\(\*FormBox[\(GIS`TravelDump`GeoUnitConvert(\*TemplateBox[{\n\
		RowBox[{\"SetAccuracy\", \"[\", \nRowBox[{\"GIS`TravelDump`km\", \
			\",\", \nRowBox[{\"Which\", \"[\", \nRowBox[{\n\
			RowBox[{\"GIS`TravelDump`km\", \">\", \"1\"}], \",\", \"1\", \",\", \n\
				RowBox[{\"GIS`TravelDump`km\", \">\", \"0.1`\"}], \",\", \"4\", \
					\",\", \"True\", \",\", \"7\"}], \"]\"}]}], \"]\"}], \"\\\"km\\\"\", \
					\"kilometers\", \"\\\"Kilometers\\\"\"},\n\"QuantityTF\"], \
					OptionValue[TravelDirectionsData, {GIS`TravelDump`opts}, UnitSystem])\
					\),
					TraditionalForm]\), Null]]} & ) /@ Flatten[\"Maneuvers\" /. (\"Legs\" \
				/. GIS`TravelDump`route), 1], Alignment -> {{Left, \".\"}}, Frame -> \
					All, FrameStyle -> LightGray]
					*                   TravelDirectionsData[_List, \
					GIS`TravelDump`route_Association, ___][\"Dataset\", \
					GIS`TravelDump`opts:OptionsPattern[TravelDirectionsData]] := \
					Dataset[(Association[GIS`TravelDump`sortRow[#1]] & ) /@ \
					(Flatten[\"Maneuvers\" /. (\"Legs\" /. GIS`TravelDump`route), 1] /. \
					{(\"Narrative\" -> GIS`TravelDump`x_) :> \"Description\" -> \
						GIS`TravelDump`x, (\"StreetInvolved\" -> GIS`TravelDump`x_) :> \
						\"Street\" -> GIS`TravelDump`x, (\"Distance\" -> GIS`TravelDump`d_) :> \
						\"Distance\" -> \
						GIS`TravelDump`GeoUnitConvert[Quantity[GIS`TravelDump`d, \"Kilometers\
						\"], OptionValue[TravelDirectionsData, {GIS`TravelDump`opts}, \
						UnitSystem]], (\"Time\" -> GIS`TravelDump`t_) :> \"Time\" -> \
						Quantity[GIS`TravelDump`t, \"Seconds\"], \
						(GIS`TravelDump`prop:\"StartingPoint\" | \"EndingPoint\" -> \
						GIS`TravelDump`p_) :> GIS`TravelDump`prop -> \
						GeoPosition[GIS`TravelDump`p]})]
					*                   TravelDirectionsData[GIS`TravelDump`l_List, \
					GIS`TravelDump`route_Association, ___][\"TravelPath\"] := \
					GeoPath[GeoPosition[Flatten[\"Shape\" /. GIS`TravelDump`route, 1]], \
					GIS`TravelDump`pathType]
					*                   TravelDirectionsData[_List, __][\"Properties\"] \
					= {\"Dataset\", \"ManeuverGrid\", \"TravelPath\", \"TravelDistance\", \
						\"TravelTime\"}
						* Sub values:       TravelDirectionsData[_List, \
						GIS`TravelDump`route_Association, ___][GIS`TravelDump`prop__] := \
						(Message[TravelDirectionsData::invprop, \
						First[{GIS`TravelDump`prop}]]; Null /; False)
						*
						* Default value:    None
						*
						* Numeric values:   None
						*/
fun travelDirectionsData(vararg arguments: Any?, options: MutableMap<String, Any?> = mutableMapOf()): MathematicaFunction {
	return MathematicaFunction("TravelDirectionsData", arguments.toMutableList(), options)
}
