package com.daniloaraujosilva.mathemagika.library.jvm.functions

import com.daniloaraujosilva.mathemagika.library.jvm.MathematicaFunction

/**
 *````
 *
 * Name:             IrreduciblePolynomialQ
 *
 * Full name:        System`IrreduciblePolynomialQ
 *
 *                   IrreduciblePolynomialQ[poly] tests whether poly is an irreducible polynomial over the rationals.
 *                   IrreduciblePolynomialQ[poly, Modulus  p] tests whether poly is irreducible modulo a prime p.
 *                   IrreduciblePolynomialQ[poly, Extension  {a , a , …}] tests whether poly is irreducible over the field extension generated by the algebraic numbers a .
 *                                                              1   2                                                                                                     i
 * Usage:            IrreduciblePolynomialQ[poly, Extension  All] tests whether poly is absolutely irreducible over the complex numbers.
 *
 *                   Extension -> None
 *                   GaussianIntegers -> False
 * Options:          Modulus -> 0
 *
 *                   Listable
 * Attributes:       Protected
 *
 *                   local: paclet:ref/IrreduciblePolynomialQ
 * Documentation:    web: http://reference.wolfram.com/language/ref/IrreduciblePolynomialQ.html
 *
 * Definitions:      None
 *
 * Own values:       None
 *
 * Down values:      None
 *
 * Up values:        None
 *
 * Sub values:       None
 *
 * Default value:    None
 *
 * Numeric values:   None
 */
fun irreduciblePolynomialQ(vararg arguments: Any?, options: MutableMap<String, Any?> = mutableMapOf()): MathematicaFunction {
	return MathematicaFunction("IrreduciblePolynomialQ", arguments.toMutableList(), options)
}
